[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Data Viz",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Emmie Appl",
    "section": "",
    "text": "Hello there! I am a Pomona College class of 2025 Molecular Biology major and Japanese minor. Currently, I am working as an undergraduate researcher in the Liu Lab studying mannitol-driven biofilm formation in Vibrio cholerae. Outside of the lab, I am a captain for the Pomona-Pitzer Swimming & Diving team."
  },
  {
    "objectID": "DataViz.html",
    "href": "DataViz.html",
    "title": "Data Viz",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Cheese.html",
    "href": "Cheese.html",
    "title": "Cheese",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Valentine's.html",
    "href": "Valentine's.html",
    "title": "Valentine’s Day",
    "section": "",
    "text": "Show the code\ntuesdata &lt;- tidytuesdayR::tt_load('2024-02-13')\n\n\n---- Compiling #TidyTuesday Information for 2024-02-13 ----\n--- There are 3 files available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 3: \"historical_spending.csv\"\n  2 of 3: \"gifts_age.csv\"\n  3 of 3: \"gifts_gender.csv\"\n\n\nShow the code\nhistorical_spending &lt;- tuesdata$historical_spending\n\nlibrary(ggplot2)\n\nggplot(historical_spending, aes(x = Year, y = PerPerson)) +\n  geom_col() +\n  labs(\n    x = \"Year\",\n    y = \"Average Money Spent per Person ($)\"\n  )"
  },
  {
    "objectID": "UKdrugs.html",
    "href": "UKdrugs.html",
    "title": "European Drug Development",
    "section": "",
    "text": "This data set includes the drugs considered for authorization in the European Union between 1995 and 2023. A generic medicine is developed to be the same as a medicine that has already been authorized, with the same active ingredient(s) and dosage(s) to treat the same condition(s). Accelerated assessment indicates that the medicine is a major interest for public health, so its timeframe for review is 150 evaluation days rather than 210.\n\n\nShow the code\ntuesdata &lt;- tidytuesdayR::tt_load('2023-03-14')\n\ndrugs &lt;- tuesdata$drugs\n\nlibrary(ggplot2)\n\nggplot(drugs, aes(y = generic)) +\n  geom_bar(aes(fill = accelerated_assessment)) +\n  labs(\n    y = \"Generic Medicine\",\n    x = \"Drug Count\",\n    fill = \"Accelerated Assessment\"\n  )\n\n\n\n\n\n\n\n\n\nTidyTuesday 2023-03-14\nData from European Medicines Agency via Miquel Anglada Girotto"
  },
  {
    "objectID": "Valentines.html",
    "href": "Valentines.html",
    "title": "Valentine’s Day",
    "section": "",
    "text": "This data was collected by the National Retail Federation in the United States and explores how consumers celebrate Valentine’s Day from 2010 to 2022.\n\n\nShow the code\ntuesdata &lt;- tidytuesdayR::tt_load('2024-02-13')\n\nhistorical_spending &lt;- tuesdata$historical_spending\n\nlibrary(ggplot2)\n\nggplot(historical_spending, aes(x = Year, y = PerPerson)) +\n  geom_col() +\n  labs(\n    x = \"Year\",\n    y = \"Average Money Spent per Person ($)\"\n  )\n\n\n\n\n\n\n\n\n\nTidyTuesday 2024-02-13\nData from the National Retail Federation via Sunja aa Kaggle"
  },
  {
    "objectID": "StringAnalysis.html",
    "href": "StringAnalysis.html",
    "title": "String Analyses",
    "section": "",
    "text": "Firstly, I was curious as to which of the six main Friends characters had the most lines overall throughout the entire Friends series. The table below shows that Rachel had the most lines throughout the running of the show while Phoebe had the fewest.\n\n\nShow the code\nlibrary(friends)\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nfriends |&gt;\n  group_by(speaker) |&gt;\n  summarize(num_lines = n()) |&gt;\n  arrange(desc(num_lines)) |&gt;\n  head()\n\n\n# A tibble: 6 × 2\n  speaker        num_lines\n  &lt;chr&gt;              &lt;int&gt;\n1 Rachel Green        9307\n2 Ross Geller         9157\n3 Chandler Bing       8462\n4 Monica Geller       8440\n5 Joey Tribbiani      8171\n6 Phoebe Buffay       7499\n\n\n\n\nShow the code\nquestions &lt;- friends |&gt;\n  select(text, speaker) |&gt;\n  filter(str_detect(speaker, \"Rachel Green|Monica Geller|Phoebe Buffay|Joey Tribbiani$|Chandler Bing|Ross Geller\")) |&gt;\n  mutate(totalquestions = str_count(text, \"\\\\?\")) |&gt;\n  group_by(speaker) |&gt;\n  summarize(num_questions = sum(totalquestions))\n  \ntotalnumber &lt;- friends |&gt;\n  select(text, speaker) |&gt;\n  filter(str_detect(speaker, \"Rachel Green|Monica Geller|Phoebe Buffay|Joey Tribbiani$|Chandler Bing|Ross Geller\")) |&gt;\n  mutate(totalphrases = str_count(text, \"\\\\?(?=\\\\s|$)|\\\\.(?=\\\\s|$)|\\\\!(?=\\\\s|$)\")) |&gt;\n  group_by(speaker) |&gt;\n  summarize(num_phrases = sum(totalphrases))\n  \nquestionsandtotal &lt;- full_join(questions, totalnumber) |&gt;\n  mutate(propquestions = num_questions/num_phrases) |&gt;\n  arrange(desc(propquestions))\n\nggplot(questionsandtotal, aes(x = speaker, y = propquestions)) +\n  geom_col(fill = \"thistle\") +\n  labs(\n    x = \"Character\",\n    y = \"Proportion of Sentences that are Questions\",\n    title = expression(paste(\"Which \", italic(\"Friends \"), \"Character is the Most Inquisitive?\"))\n  )\n\n\n\n\n\n\n\n\n\nThe next question I wanted to answer using the Friends data set was “which character asked the most questions?” during their time in the show. I went about answering this question by counting the number of questions each character asked, as well as the number of sentences each character spoke. By dividing the number of questions by the number of sentences (including questions), I calculated the proportion of sentences that were questions for each character. From this, I learned that Monica had the largest proportion of questions while Phoebe had the smallest.\n\n\nShow the code\nwithyear &lt;- left_join(friends, friends_info, by = c(\"season\", \"episode\")) |&gt;\n  mutate(year = as.factor(str_sub(air_date, 1, 4))) |&gt;\n  select(text, speaker, year) |&gt;\n  filter(str_detect(speaker, \"Rachel Green|Monica Geller|Phoebe Buffay|Joey Tribbiani$|Chandler Bing|Ross Geller\")) |&gt;\n  group_by(speaker, year) |&gt;\n  summarize(lines = n())\n\nggplot(withyear, aes(x = year, y = lines, group = speaker)) +\n  geom_line(aes(color = speaker)) +\n  labs(\n    x = \"Year\",\n    y = \"Number of Lines\",\n    title = expression(paste(\"Number of Lines Spoken by \", italic(\"Friends \"), \"Characters from 1994 to 2004\"))\n  )\n\n\n\n\n\n\n\n\n\nLastly, I wanted to know how the number of lines spoken by each character changed over the lifetime of the show. Ross began the show with the largest number of lines, but was overtaken by Rachel in 1997. Phoebe consistently had the smallest number of lines, except for in 2001 when Ross’ number of lines dropped to below hers. Because the series began in September of 1994 and ended in May of 2004, these years have fewer lines overall compared to the intermediary years.\nHvitfeldt E (2021). friends: The Entire Transcript from Friends in Tidy Format. R package version 0.1.0.9000, https://github.com/EmilHvitfeldt/friends.\nData originally from the Character Mining repository."
  }
]